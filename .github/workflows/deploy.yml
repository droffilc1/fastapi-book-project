name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e  # 🚫 Exit immediately if any command fails

            echo "Starting deployment on server..."  # 🚀 Notify start of deployment

            # 🔒 Ensure the deployment directory exists and set proper permissions
            sudo mkdir -p /var/www/fastapi-app
            sudo chown $USER:$USER /var/www/fastapi-app
            cd /var/www/fastapi-app

            # 🔐 Configure SSH to securely interact with GitHub
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            chmod 600 ~/.ssh/known_hosts
            
            # 🔄 Check if the repository is already cloned; if not, clone it, else pull latest changes
            if [ ! -d ".git" ]; then
              git clone https://github.com/droffilc1/fastapi-book-project.git .
            else
              echo "Repository exists, pulling latest changes..."
              git reset --hard
              git pull origin main
            fi

            # 🐳 Ensure Docker is installed; if missing, install and start the service
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            else
              echo "Docker is already installed!"
            fi

            # 🚀 Add current user to the Docker group and adjust socket permissions for Docker commands
            sudo usermod -aG docker $USER
            sudo chmod 666 /var/run/docker.sock
            
            # 🧹 Cleanup: Remove unused Docker resources and shut down existing containers gracefully
            echo "Cleaning ..."
            docker system prune -f || true
            docker compose down || true

            # 🚀 Build and run the new Docker container in detached mode
            docker compose up -d ---build

            echo "✅ Deployment complete!"  # 🎉 Notify that deployment is finished
